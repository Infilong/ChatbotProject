"""
Django settings for chatbot_backend project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import dj_database_url
from decouple import config
from django.utils.translation import gettext_lazy as _

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('DJANGO_SECRET_KEY', default='django-insecure-_nlh&+!=+i2z&nrr(v18=2=vb4jbi3!2w4jop)zj@)!8ny&br%')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=True, cast=bool)

ALLOWED_HOSTS = ['*']  # Allow all hosts for development


# Application definition

INSTALLED_APPS = [
    'jazzmin',  # Must be before django.contrib.admin
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',  # Token authentication
    'rest_framework_simplejwt',  # JWT authentication
    'corsheaders',
    'channels',
    'authentication',
    'chat',
    'analytics',
    'documents',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # Custom timezone middleware - re-enabled (popup and auto-refresh removed from template)
    'chatbot_backend.middleware.TimezoneDetectionMiddleware',
    'chatbot_backend.middleware.UserTimezoneMiddleware',
    # Session tracking middleware
    'authentication.middleware.SessionTrackingMiddleware',
    'authentication.middleware.SessionCleanupMiddleware',
]

ROOT_URLCONF = 'chatbot_backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'chatbot_backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

LANGUAGES = [
    ('en', _('English')),
    ('ja', _('Japanese')),
]

# Use system timezone - Django will automatically use the admin's browser timezone
# for displaying dates in the admin interface when USE_TZ = True
TIME_ZONE = 'UTC'  # Server stores everything in UTC

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Locale files for translations
LOCALE_PATHS = [
    BASE_DIR / 'locale',
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Django REST Framework Configuration
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',  # Token auth for frontend
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        # Remove SessionAuthentication to avoid CSRF issues with cross-origin requests
        # 'rest_framework.authentication.SessionAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',  # Require authentication by default
        # 'rest_framework.permissions.AllowAny',  # Only for development - now removed
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 20,
}

# JWT Configuration
from datetime import timedelta

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': True,
    'UPDATE_LAST_LOGIN': True,
    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,
    'VERIFYING_KEY': None,
    'AUTH_HEADER_TYPES': ('Bearer',),
    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',
}

# CORS Configuration for Development
CORS_ALLOW_ALL_ORIGINS = True  # Allow all origins in development
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOWED_ORIGIN_REGEXES = [
    r"^http://localhost:\d+$",
    r"^http://127\.0\.0\.1:\d+$", 
]

# Allowed origins for production
CORS_ALLOWED_ORIGINS = [
    'http://localhost:3000',
    'http://localhost:3001', 
    'http://127.0.0.1:3000',
    'http://127.0.0.1:3001',
]

# Additional CORS headers
CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization', 
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
]

CORS_ALLOW_METHODS = [
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH', 
    'POST',
    'PUT',
]

# Additional debugging settings
CORS_PREFLIGHT_MAX_AGE = 86400
CORS_EXPOSE_HEADERS = []

# Logging Configuration
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'verbose'
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'DEBUG',
    },
    'loggers': {
        'analytics.langextract_service': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': False,
        },
        'django': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': False,
        },
    },
}

# Django Channels Configuration
ASGI_APPLICATION = 'chatbot_backend.asgi.application'

CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels.layers.InMemoryChannelLayer',
    },
}

# Media files (uploads)
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# LLM API Configuration
OPENAI_API_KEY = config('OPENAI_API_KEY', default='')
GEMINI_API_KEY = config('GEMINI_API_KEY', default='')
CLAUDE_API_KEY = config('CLAUDE_API_KEY', default='')

# Jazzmin Admin Theme Configuration
JAZZMIN_SETTINGS = {
    "site_title": "DataPro",
    "site_header": "DataPro",
    "site_brand": "DataPro",
    "welcome_sign": "Welcome to DataPro Analytics Dashboard",
    "copyright": "DataPro Solutions",
    "search_model": "auth.User",
    "show_sidebar": True,
    "navigation_expanded": True,
    "order_with_respect_to": [
        # Auth app and models
        "auth",
        "auth.user", 
        "auth.group",
        
        # Auth Token app and models
        "authtoken",
        "authtoken.tokenproxy",
        
        # Authentication app and models (explicit order)
        "authentication",
        "authentication.usersession",      # Admin Sessions first
        "authentication.sessionactivity",  # Session Activities second  
        "authentication.userprofile",     # User Profiles third
        "authentication.userpreferences", # User Preferences fourth
        
        # Chat app and models (explicit order)
        "chat",
        "chat.usersession",           # Customer Sessions first
        "chat.conversation",          # Conversations second
        "chat.message",               # Messages third
        "chat.conversationsummary",   # Conversation Summaries fourth
        "chat.apiconfiguration",      # API Configuration fifth
        "chat.adminprompt",           # Admin Prompts sixth
        
        # Documents app and models
        "documents", 
        "documents.document",
        "documents.documentationimprovement"
    ],
    "show_ui_builder": False,
    "show_sidebar_user": False,
    "navbar_user_avatar": False,
    "user_avatar": None,
    "language_chooser": True,
    "topmenu_links": [
        {}
    ],
    "icons": {
        # Apps (5)
        "auth": "fas fa-shield-alt",
        "authtoken": "fas fa-key",
        "authentication": "fas fa-user-shield", 
        "chat": "fas fa-comments",
        "documents": "fas fa-folder-open",
        
        # Auth models (2)
        "auth.user": "fas fa-user",
        "auth.group": "fas fa-users",
        
        # Auth token models (1)  
        "authtoken.tokenproxy": "fas fa-passport",
        
        # Authentication models (4)
        "authentication.userprofile": "fas fa-user-circle",
        "authentication.userpreferences": "fas fa-user-cog", 
        "authentication.usersession": "fas fa-user-clock",
        "authentication.sessionactivity": "fas fa-history",
        
        # Chat models (6)
        "chat.conversation": "fas fa-comment-dots",
        "chat.message": "fas fa-comment",
        "chat.usersession": "fas fa-users-cog",
        "chat.apiconfiguration": "fas fa-key",
        "chat.adminprompt": "fas fa-robot",
        "chat.conversationsummary": "fas fa-file-text",
        
        # Documents models (2)
        "documents.document": "fas fa-file-alt",
        "documents.documentationimprovement": "fas fa-tools",
    },
    "theme": "flatly",
    "custom_css": "admin/css/sidebar-responsive.css",
}

JAZZMIN_UI_TWEAKS = {
    "navbar": "navbar-white navbar-light",
    "sidebar": "sidebar-light-primary",
    "sidebar_nav_small_text": False,
    "sidebar_nav_compact_style": True,
    "sidebar_nav_flat_style": True,
    "sidebar_disable_expand": False,
    "theme": "flatly",
}
