# Generated by Django 5.2.5 on 2025-08-24 02:48

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('chat', '0001_initial'),
        ('documents', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AnalyticsSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True, verbose_name='Date')),
                ('total_conversations', models.IntegerField(default=0, verbose_name='Total Conversations')),
                ('total_messages', models.IntegerField(default=0, verbose_name='Total Messages')),
                ('unique_users', models.IntegerField(default=0, verbose_name='Unique Users')),
                ('average_satisfaction', models.FloatField(default=0.0, verbose_name='Average Satisfaction')),
                ('positive_conversations', models.IntegerField(default=0, verbose_name='Positive Conversations')),
                ('negative_conversations', models.IntegerField(default=0, verbose_name='Negative Conversations')),
                ('neutral_conversations', models.IntegerField(default=0, verbose_name='Neutral Conversations')),
                ('total_issues_raised', models.IntegerField(default=0, verbose_name='Total Issues Raised')),
                ('resolved_issues', models.IntegerField(default=0, verbose_name='Resolved Issues')),
                ('escalated_issues', models.IntegerField(default=0, verbose_name='Escalated Issues')),
                ('average_response_time', models.FloatField(default=0.0, verbose_name='Average Response Time')),
                ('bot_vs_human_ratio', models.FloatField(default=0.0, verbose_name='Bot vs Human Ratio')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
            ],
            options={
                'verbose_name': 'Analytics Summary',
                'verbose_name_plural': 'Analytics Summaries',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='ConversationAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('analyzed_at', models.DateTimeField(auto_now=True, verbose_name='Analyzed At')),
                ('sentiment', models.CharField(choices=[('positive', 'Positive'), ('negative', 'Negative'), ('neutral', 'Neutral')], max_length=10, verbose_name='Sentiment')),
                ('satisfaction_level', models.IntegerField(verbose_name='Satisfaction Level')),
                ('issues_raised', models.JSONField(default=list, verbose_name='Issues Raised')),
                ('urgency_indicators', models.JSONField(default=list, verbose_name='Urgency Indicators')),
                ('resolution_status', models.CharField(choices=[('resolved', 'Resolved'), ('pending', 'Pending'), ('escalated', 'Escalated')], max_length=10, verbose_name='Resolution Status')),
                ('customer_intent', models.CharField(max_length=50, verbose_name='Customer Intent')),
                ('key_insights', models.JSONField(default=list, verbose_name='Key Insights')),
                ('source_spans', models.JSONField(default=list, verbose_name='Source Spans')),
                ('confidence_score', models.FloatField(default=0.0, verbose_name='Confidence Score')),
                ('langextract_model_used', models.CharField(max_length=50, verbose_name='LangExtract Model Used')),
                ('processing_time', models.FloatField(blank=True, null=True, verbose_name='Processing Time')),
                ('conversation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='analysis', to='chat.conversation', verbose_name='Conversation')),
            ],
            options={
                'verbose_name': 'Analysis',
                'verbose_name_plural': 'Analysis',
                'ordering': ['-analyzed_at'],
            },
        ),
        migrations.CreateModel(
            name='DocumentUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('referenced_at', models.DateTimeField(auto_now_add=True, verbose_name='Referenced At')),
                ('search_query', models.CharField(max_length=500, verbose_name='Search Query')),
                ('relevance_score', models.FloatField(default=0.0, verbose_name='Relevance Score')),
                ('usage_type', models.CharField(choices=[('full_context', 'Full Context'), ('excerpt', 'Excerpt'), ('summary', 'Summary'), ('keyword_match', 'Keyword Match')], default='excerpt', max_length=20, verbose_name='Usage Type')),
                ('excerpt_used', models.TextField(blank=True, verbose_name='Excerpt Used')),
                ('excerpt_start_position', models.IntegerField(blank=True, null=True, verbose_name='Start Position')),
                ('excerpt_length', models.IntegerField(blank=True, null=True, verbose_name='Excerpt Length')),
                ('keywords_matched', models.JSONField(default=list, verbose_name='Keywords Matched')),
                ('context_category', models.CharField(blank=True, max_length=100, verbose_name='Context Category')),
                ('user_intent', models.CharField(blank=True, max_length=100, verbose_name='User Intent')),
                ('user_feedback', models.CharField(blank=True, choices=[('positive', 'Positive'), ('negative', 'Negative')], max_length=10, null=True, verbose_name='User Feedback')),
                ('effectiveness_score', models.FloatField(blank=True, null=True, verbose_name='Effectiveness Score')),
                ('response_helpful', models.BooleanField(blank=True, null=True, verbose_name='Response Helpful')),
                ('llm_model_used', models.CharField(blank=True, max_length=50, verbose_name='LLM Model Used')),
                ('processing_time', models.FloatField(blank=True, null=True, verbose_name='Processing Time')),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chat.conversation', verbose_name='Conversation')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usage_stats', to='documents.document', verbose_name='Document')),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chat.message', verbose_name='Message')),
            ],
            options={
                'verbose_name': 'Document Usage',
                'verbose_name_plural': 'Document Usage',
                'ordering': ['-referenced_at'],
                'indexes': [models.Index(fields=['document', '-referenced_at'], name='analytics_d_documen_f2db59_idx'), models.Index(fields=['search_query'], name='analytics_d_search__0aaf88_idx'), models.Index(fields=['relevance_score'], name='analytics_d_relevan_c9dee7_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback_type', models.CharField(choices=[('positive', 'Positive'), ('negative', 'Negative')], max_length=10, verbose_name='Feedback Type')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Timestamp')),
                ('comment', models.TextField(blank=True, verbose_name='Comment')),
                ('rating', models.IntegerField(blank=True, null=True, verbose_name='Rating')),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback_entries', to='chat.message', verbose_name='Message')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'User Feedback',
                'verbose_name_plural': 'User Feedback',
                'ordering': ['-timestamp'],
                'unique_together': {('user', 'message')},
            },
        ),
    ]
